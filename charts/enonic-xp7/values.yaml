image:
  repository: enonic/xp
  pullPolicy: IfNotPresent
  tag: "7.4.1-ubuntu"

suPassword: changeme

JarSpecs:
  prefix: "sample-project-"
  name: sample-project-1.1.0.jar
  bucketOptions:
    secret: bucket-secret
    url: s3.example.com
    suffix: sample-project/staging

smtp:
  enabled: false
  image: namshi/smtp

envVars: []
#   - name: JAVA_OPTS
#     value: -Xms2G -Xmx2G

probes:
  initialDelaySeconds: 30
  periodSeconds: 10
  failureThreshold: 2

terminationGracePeriodSeconds: 180

replicaCount: 1

annotations: {}

labels: {}

podAnnotations: {}

podLabels: {}

imagePullSecrets: []

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
    # memory: 2000Mi

nodeSelector: {}

tolerations: []

affinity: {}

volumeSpec:
  storageClass: "managed-nfs-storage"
  sizes:
    blobs: 3Gi
    data: 3Gi
    snapshots: 3Gi
    deploy: 400Mi


ingress:
  sslIssuer: "letsencrypt-prod"
  ssl: true
  redirectFromWWW: true
  maxBodySize: 1000m
  hosts:
    - host: app.example.com
    # - host: localhost
    #   ssl: false

vhosts: |-
  enabled = false

  mapping.site.host = app.example.com
  mapping.site.source = /
  mapping.site.target = /site/default/master/example

  mapping.admin.host = app.example.com
  mapping.admin.source = /admin
  mapping.admin.target = /admin
  mapping.admin.idProvider.system = default

customESConfigs: ""
# customESConfigs: |-
#   index.max_result_window = 2147483647

customLoggingFormat: '%date{ISO8601} %-5level %logger{36} - %msg%n'

customEnonicConfigs: {}
  # com.enonic.xp.mail.cfg: |-
  #   smtpHost=smtp.gmail.com
  #   smtpPort=587
  #   smtpAuth=true
  #   smtpUser=test@test.com
  #   smtpPassword=password
  #   smtpTLS=true


# KEDA support. See https://keda.sh/
# It creates a ScaledObject like on https://keda.sh/docs/2.4/concepts/scaling-deployments/
keda:
  enabled: false
  settings:
    # pollingInterval:  30                               # Optional. Default: 30 seconds
    # cooldownPeriod:   300                              # Optional. Default: 300 seconds
    # idleReplicaCount: 0                                # Optional. Must be less than minReplicaCount
    # minReplicaCount:  1                                # Optional. Default: 0
    maxReplicaCount:  1                                  # Optional. Default: 100
    # fallback:                                          # Optional. Section to specify fallback options
    #   failureThreshold: 3                              # Mandatory if fallback section is included
    #   replicas: 6                                      # Mandatory if fallback section is included
    # advanced:                                          # Optional. Section to specify advanced options
    #   restoreToOriginalReplicaCount: true/false        # Optional. Default: false
    #   horizontalPodAutoscalerConfig:                   # Optional. Section to specify HPA related options
    #     behavior:                                      # Optional. Use to modify HPA's scaling behavior
    #       scaleDown:
    #         stabilizationWindowSeconds: 300
    #         policies:
    #         - type: Percent
    #           value: 100
    #           periodSeconds: 15
  # If any trigger is provided, a Prometheus trigger will be used with the following
  # access URL and the "nginx_ingress_controller_requests" metric, which will tell KEDA
  # if the application is being used or not (regardless of how many requests).
  # This approach is used just to avoid idle applications from
  # spending resources unnecessarily
  defaultPrometheusURL: "http://prometheus.prometheus.svc.cluster.local"
  triggers: []
    # - type: prometheus
    #   metadata:
    #     serverAddress: "http://prometheus.kube-system.svc.cluster.local"
    #     metricName: http_total_requests
    #     query: sum(rate(nginx_ingress_controller_requests{namespace='enonic-review', service="nhn-service"}[2m]))*500
    #     threshold: '1'

